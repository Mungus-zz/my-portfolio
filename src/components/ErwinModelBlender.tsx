/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.9 public/models/ErwinModelBlender.gltf -t 
*/

import * as THREE from 'three'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

useGLTF.preload('/models/ErwinModelBlender.gltf')

type GLTFResult = GLTF & {
  nodes: {
    Wolf3D_Avatar: THREE.Mesh
  }
  materials: {
    Wolf3D_Avatar: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(new THREE.Group())
  const { nodes, materials } = useGLTF('/models/ErwinModelBlender.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Wolf3D_Avatar" geometry={nodes.Wolf3D_Avatar.geometry} material={materials.Wolf3D_Avatar} morphTargetDictionary={nodes.Wolf3D_Avatar.morphTargetDictionary} morphTargetInfluences={nodes.Wolf3D_Avatar.morphTargetInfluences} />
      </group>
    </group>
  )
}

useGLTF.preload('/ErwinModelBlender.gltf')
